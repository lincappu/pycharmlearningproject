# !/usr/bin/env python3
# _*_coding:utf-8_*_
# __author__：FLS

# 使用 redis 来实现统计数据或者是进行计数器相关的操作。


# 实现计数器的功能：
# 1、用字符串健来实现
将每个维度组合都设置一个 key，然后用 incr和 decr 来操作。
缺点：设置的 key 太多
# 2、使用哈希健
最多使用两个维度，外层是一个维度，里层的fileld 是第二维度。
总结：简单、易于实现，数据准确性高，但是内容多的时候内存占用过大。
# 3、使用集合键
这个好处就是可以自动进行保证唯一性，很明显不能统计次数，只能统计哪些。可以用多个集合，分别来嵌套。

4、利用 bitmap来统计，好处就是只和空间极度减少，1 亿用户只需要 12MB，但是可存储的信息量只有 2，就是 0 或者是 1
所以他适合存储 0 或者 1 的这种场景，典型的就是判断用户登陆，网站某个用户是否访问，

核心点就是两个：
一个是 key，一个是 offerset，相当于有这两个变量，如何定义这两个变量然后得到结果。
一般有两种方式：
1、横向扩展，就是 key 来标示用户的状态值，但是这样 key 会急剧扩展，不符合预期
2、针对某个 key 的纵向扩展，key 来记录业务属性，uid 来作为 offset，增加的就是 value，符合预期。

长尾记录：需要持续记录时间的数据，需要自己修改 offset

用户 id 不能太稀疏，否则会还不如使用 has 的方式。

坑：bitop key 0 0 返回的是第一个字节8 位上 1的个数。

bitmap 也可以进行在时间和空间利用压缩算法继续优化。

5、利用 hyperloglog
有 1%的误差，应为存储的不是具体的数据而是概率。一个key 只需要 12kb。
